<template>
  <view class="container">
    <Address>
      <view class="address-info" @tap="addAddress">
        <block wx:if="{{ address }}">
          <view class="item space-between">
            <view class="col">
              <text class="note">收货人：</text>
              <text class="detail">{{ address.userName }}</text>
            </view>
            <view class="col">
              <text class="address-phone">{{address.telNumber}}</text>
              <view class="iconfont icon-jiantouyou"></view>
            </view>
          </view>
          <view class="item">
            <text class="note">收货地址：</text>
            <text class="detail">{{address.detail}}</text>
          </view>
        </block>
        <block wx:else>
          <view class="address-add-btn" @tap="addAddress">+ 新增地址</view>
        </block>
        <image class="address-border" src="/assets/images/cart_border@2x.png" alt="" />
      </view>
    </Address>
    <view class="divider"></view>
    <view class="order-list">
      <block>
        <view class="product-item" wx:for="{{ orderList }}" wx:key="goods_id">
          <navigator url="/pages/goods_detail?goods_id={{item.goods_id}}" class="product-left">
            <image class="product-img image-holder" src="{{item.goods_small_logo}}" />
          </navigator>
          <view class="product-right">
            <navigator url="/pages/goods_detail?goods_id={{item.goods_id}}" class="product-name">
            {{ item.goods_name }}
            </navigator>
            <view class="product-price">
              <text class="product-price-symbol">￥</text>
              <text class="product-price-integer">{{ item.goods_price }}</text>
              <text class="product-price-decimal">.00</text>
            </view>
            <view class="product-count">x{{ item.goods_num }}</view>
          </view>
        </view>
      </block>
      <view class="order-cell">
        项目测试使用，支付成功后我们不会为您发货
      </view>
    </view>
    <view class="divider"></view>
    <view class="order-total">
      <view class="order-total-item">
        <view class="order-total-item-left">商品金额</view>
        <view class="order-total-item-right">￥{{ totalMoney }}</view>
      </view>
      <view class="order-total-item">
        <view class="order-total-item-left">运费</view>
        <view class="order-total-item-right">+￥{{ 6 }}.00</view>
      </view>
    </view>
    <view class="order-pay">
      <view class="order-pay-head">实付金额：<text class="order-pay-total">￥{{ totalMoney + 6 }}</text></view>
      <!--
        11.0.1 微信登录授权按钮
        微信已经废除 wx.getUserInfo 这个接口，现在只能通过按钮，获取用户的登录信息
        11.0.2  open-type="getUserInfo" 指定按钮开放能力为获取用户信息
        11.0.3  配合  bindgetuserinfo 事件获取获取用户信息
      -->
      <!-- 11.0.9.3 通过 token 判断切换显示登录按钮还是下单按钮 -->
      <!-- <block  wx:if="{{ !token }}" > -->
        <button class="login-btn" open-type="getUserInfo" @getuserinfo="getuserinfo">点击登录后下单</button>
      <!-- </block> -->
      <!-- <block wx:else> -->
        <view class="login-btn order-pay-btn">微信支付</view>
      <!-- </block> -->
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import fetch from '../utils/fetch.js'

export default class CartOrder extends wepy.page {
  config = {
    navigationBarTitleText: '结算'
  }

  data = {
    orderList: [],
    address: ''
  }

  computed = {
    // 总金额
    totalMoney() {
      let total = 0
      this.orderList.forEach(item => {
        total += item.goods_num * item.goods_price
      })
      return total
    }
  }

  methods = {
    // 增加地址
    async addAddress() {
      let res = await wepy.chooseAddress()
      // console.log(res)
      // 存入storage
      wepy.setStorageSync('address', res)
      // 存在data里
      this.address = this.setAddress(res)
      this.$apply()
    },

    // 拿用户信息
    async getuserinfo(e) {
      // 生成code
      let code = await wepy.login()
      // console.log(code)
      // console.log(e.detail)
      let { encryptedData, iv, rawData, signature } = e.detail
      let data = {
        code: code.code,
        encryptedData,
        iv,
        rawData,
        signature
      }
      // console.log(data)
      try {
        let res = await fetch('users/wxlogin', {
          method: 'POST',
          data,
          type: 'local'
        })
        // console.log(res)
        let {
          data: { token },
          meta: { msg, status }
        } = res.data
        // console.log(token)
        // console.log(msg, status)
        if (status === 200) {
          // 存储token到storage
          wepy.setStorageSync('token', token)
          wepy.showToast({
            title: msg
          })
        } else {
          wepy.showToast({
            title: msg
          })
        }
      } catch (error) {
        console.log('垃圾后台')
      }
    }
  }

  onShow() {
    // 每次切换进页面时读取storage
    let cartList = wepy.getStorageSync('cart') || []
    // 只有选中的商品才结算
    this.orderList = cartList.filter(item => item.isChecked)

    // 每次切换进页面时拿地址
    let address = wepy.getStorageSync('address') || ''
    if (address) {
      this.address = this.setAddress(address)
    }
  }

  setAddress(address) {
    let { provinceName, cityName, countyName, detailInfo } = address
    address.detail = `${provinceName}${cityName}${countyName}${detailInfo}`
    return address
  }
}
</script>

<style lang="less">
@import '../assets/wxss/icon-font.wxss';

page {
  background-color: #fff;
}
.divider {
  background-color: #f4f4f4;
}
.address {
  &-info {
    height: 222rpx;
    padding-bottom: 15rpx;
    box-sizing: border-box;
    position: relative;
    background-color: #fff;
    display: flex;
    flex-direction: column;
    align-content: center;
    justify-content: span;
    .space-between {
      justify-content: space-between;
    }
    .item {
      padding: 22rpx 16rpx;
      display: flex;
      flex-wrap: wrap;
      font-size: 32rpx;
      line-height: 1.3;

      .note {
        width: 160rpx;
      }
      .detail {
        max-width: 560rpx;
      }
      .address-phone {
        margin-right: 82rpx;
      }
      .icon-jiantouyou {
        position: absolute;
        right: 10rpx;
      }
      .icon-jiantouyou:before {
        font-size: 24rpx;
        color: #999;
        line-height: 1;
        width: 15rpx;
        height: 25rpx;
      }
    }
  }
  &-border {
    width: 750rpx;
    height: 15rpx;
    position: absolute;
    bottom: 0;
    left: 0;
  }
  &-add {
    height: 222rpx;
    &-btn {
      width: 360rpx;
      height: 80rpx;
      background-color: #f4f4f4;
      border-radius: 5rpx;
      color: #ccc;
      font-size: 32rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
    }
  }
}

.product {
  &-item {
    display: flex;
    padding: 30rpx 20rpx;
    position: relative;
    &::after {
      content: '';
      position: absolute;
      left: 20rpx;
      right: 0;
      bottom: 0;
      border-bottom: 1rpx solid #ddd;
    }
  }
  &-left {
    margin-right: 26rpx;
    &,
    .product-img {
      width: 200rpx;
      height: 200rpx;
      background-color: #eee;
    }
  }
  &-right {
    width: 480rpx;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    position: relative;
  }
  &-name {
    height: 84rpx;
    font-size: 30rpx;
    line-height: 1.4;
    /* 多行文字隐藏省略号 */
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  &-price {
    color: #ff2d4a;
    &-symbol,
    &-decimal {
      font-size: 28rpx;
    }
    &-integer {
      font-size: 44rpx;
    }
  }
  &-count {
    position: absolute;
    right: 0;
    bottom: 0;
    letter-spacing: 2rpx;
    color: #999;
  }
}

.order {
  &-list {
    background-color: #fff;
  }
  &-total-item {
    height: 60rpx;
    background-color: #fff;
    padding: 0 20rpx;
    display: flex;
    justify-content: space-between;
    align-items: center;
    position: relative;
    &-right {
      color: #ff2d4a;
    }
  }
  &-cell {
    height: 88rpx;
    background-color: #fff;
    padding: 0 20rpx;
    display: flex;
    align-items: center;
    position: relative;
    justify-content: space-between;
    color: #e93323;
    font-size: 35rpx;
    font-weight: 700;
    &::after {
      content: '';
      position: absolute;
      border-top: 1rpx solid #ddd;
      left: 20rpx;
      right: 20rpx;
      top: -1rpx;
    }
    .btn-line {
      border: 2rpx solid #999;
      border-radius: 5rpx;
      width: 156rpx;
      height: 56rpx;
      display: flex;
      justify-content: center;
      align-items: center;
      margin-left: 40rpx;
    }
    .btn-color-main {
      color: #ff2d4a;
    }
  }
  &-pay {
    background-color: #fff;
    padding: 20rpx 20rpx 60rpx;
    font-size: 30rpx;
    text-align: right;
    &-head {
      margin-bottom: 20rpx;
    }
    &-total {
      color: #ff2d4a;
    }
    &-btn,
    .login-btn {
      background-color: #00c000;
      display: flex;
      height: 80rpx;
      justify-content: center;
      align-items: center;
      color: #fff;
      font-size: 30rpx;
      border-radius: 5rpx;
      margin-bottom: 20rpx;
      &.disabled {
        background-color: #ddd;
      }
    }
  }
}
</style>
