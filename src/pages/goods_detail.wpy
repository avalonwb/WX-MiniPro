<template>
  <view class="container">
    <!-- 商品详情页 -->
    <swiper class="swiper"
    indicator-dots="{{ true }}"
    indicator-color="rgba(255,255,255,.5)"
    indicator-active-color="#ffffff"
    interval="{{2500}}"
    autoplay="{{true}}"
    circular="{{true}}">
      <block wx:for="{{ detail.pics }}" wx:key="pics_id">
        <swiper-item>
          <image class="swiper-img" src="{{ item.pics_big_url }}" />
        </swiper-item>
      </block>
    </swiper>
    <!-- 商品信息 -->
    <view class="product-info">
      <view class="product-head">
        <text class="price">￥ {{ detail.goods_price }}</text>
      </view>
      <view class="product-body">
        <view class="product-name">
          {{ detail.goods_name }}
        </view>
        <view class="product-like">
          <view class="iconfont icon-shoucang"></view>
          <view>收藏</view>
        </view>
      </view>
      <view class="product-foot">
        快递：<text>免运费</text>
      </view>
    </view>
    <!-- 促销 -->
    <view class="part">
      <view class="part-item part-line">
        <text class="note">促销</text><text class="description color-main">满300减30元</text>
      </view>
      <view class="part-item">
        <text class="note">已选</text><text class="description">黑色/S/1件</text>
      </view>
    </view>
    <!-- 送至 -->
    <view class="part">
      <!-- <Address> -->
      <view class="part-item" @tap="chooseAddress">
        <text class="note">送至</text><text class="description">{{ address }}</text>
        <view class="iconfont icon-jiantouyou"></view>
      </view>
      <!-- </Address> -->
    </view>

    <!-- tab栏 -->
    <view class="tabs">
      <view class="tabs-head">
        <block>
          <view class="tabs-item {{ tabIndex === '1' ? 'active' : '' }}"
          @tap="changeState(1)"
          >
            图文详情
          </view>
          <view class="tabs-item {{ tabIndex === '2' ? 'active' : '' }}"
          @tap="changeState(2)"
          >
            规格参数
          </view>
        </block>
      </view>
      <view class="tabs-body">
        <view class="tabs-content introduce" hidden="{{ tabIndex === '2' }}">
          <!-- 引入模板 -->
          <import src="../lib/wxParse/wxParse.wxml"/>
          <!-- 渲染数据 -->
          <template is="wxParse" data="{{wxParseData:imageInfo.nodes}}"/>
        </view>
        <view class="tabs-content" hidden="{{ tabIndex === '1' }}">
          <block>
            <view class="param-item">
              <text class="note">商品名称</text>
              <text class="description">复古装色运动外套男女情侣套装买一送医就是这么便宜</text>
            </view>
            <view class="param-item">
              <text class="note">品牌</text>
              <text class="description">初羽</text>
            </view>
            <view class="param-item">
              <text class="note">编号</text>
              <text class="description">8R1005</text>
            </view>
            <view class="param-item">
              <text class="note">颜色</text>
              <text class="description">黑色/白色/灰色</text>
            </view>
          </block>
        </view>
      </view>
    </view>

    <!-- 底部tab栏 -->
    <view class="fixed-bar">
      <view class="item">
        <!-- 9.0.1 客服按钮添加  open-type="contact" -->
        <button open-type="contact" class="contact-btn">客服按钮</button>
        <view class="iconfont icon-kefu"></view>
        <text class="item-note">联系客服</text>
      </view>
      <!-- 10.0.1 事件绑定，通过事件方式，实现购物车 tabBar 跳转 -->
      <navigator class="item" url="/pages/cart" open-type="switchTab">
        <view class="iconfont icon-gouwuche"></view>
        <text class="item-note">购物车</text>
      </navigator>
      <view class="btn-group">
        <view class="btn yellow-button" @tap="addCart">加入购物车</view>
        <view class="btn red-button">立即购买</view>
      </view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import fetch from '../utils/fetch.js'
import WxParse from '../lib/wxParse/wxParse.js'

export default class GoodsDetail extends wepy.page {
  config = {
    navigationBarTitleText: '商品详情页'
  }
  // 存储数据
  data = {
    proId: '',
    detail: [],
    address: '请选择地址',
    tabIndex: '1'
  }

  // 提供自定义方法
  methods = {
    async chooseAddress() {
      // console.log(111)
      let res = await wepy.chooseAddress()
      // console.log(res)
      let { provinceName, cityName, countyName, detailInfo } = res
      this.address = `${provinceName}${cityName}${countyName}${detailInfo}`
      // 存储收货地址
      wepy.setStorageSync('address', res)
    },

    // 切换tab栏
    changeState(index) {
      // console.log(index)
      this.tabIndex = index
    },

    // 加入购物车
    addCart() {
      let {
        goods_id: goodsId,
        goods_name,
        goods_price,
        goods_small_logo
      } = this.detail
      // 购物车数组
      let cart = wepy.getStorageSync('cart') || []
      // 判断购物车有没有该商品 有就数量加1 没有就新增
      let goods = cart.find(item => item.goods_id === goodsId)
      if (!goods) {
        cart.push({
          goods_id: goodsId,
          goods_name,
          goods_price,
          goods_small_logo,
          goods_num: 1,
          isChecked: true
        })
      } else {
        goods.goods_num++
      }
      // 购物车数组重新存入storage
      wepy.setStorageSync('cart', cart)
      // 提示信息
      wepy.showToast({
        title: '添加成功',
        mask: true
      })
    }
  }

  onLoad(query) {
    // console.log(query)
    this.proId = query.goods_id
    this.getProList(query.goods_id)

    // 读取收货地址
    let res = wepy.getStorageSync('address')
    let { provinceName, cityName, countyName, detailInfo } = res
    if (res) {
      this.address = `${provinceName}${cityName}${countyName}${detailInfo}`
    } else {
      this.address = '请选择守护地址啊'
    }
  }

  // 请求数据
  async getProList(id) {
    let res = await fetch(`goods/detail?goods_id=${id}`)
    // console.log(res)
    this.detail = res.data.data
    this.$apply()

    // 此时detail的图文信息已经得到, 转换html到wxml ---图文信息
    WxParse.wxParse('imageInfo', 'html', this.detail.goods_introduce, this, 0)
  }

  // 防止wxParse 报提示信息
  wxParseImgLoad() {}
}
</script>

<style lang="less">
/* 引入字体图标 */
@import '../assets/wxss/icon-font.wxss';
/* 引入html转wxml 的样式文件 */
@import '../lib/wxParse/wxParse.wxss';

.swiper,
.swiper-img {
  width: 750rpx;
  height: 720rpx;
}

.product-info {
  height: 300rpx;
  background-color: #fff;
  padding: 0 16rpx;
}
.product-head {
  height: 80rpx;
  .price {
    color: #ff2d4a;
    font-size: 50rpx;
    margin-left: -10rpx;
  }
  .old-price {
    color: #999;
    font-size: 26rpx;
  }
}
.product-body {
  display: flex;
  align-items: center;
  justify-content: space-between;
  .product-name {
    font-size: 34rpx;
    width: 546rpx;
    height: 88rpx;
    line-height: 1.3;
    /* 多行文字隐藏省略号 */
    overflow: hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
  .product-like {
    width: 50rpx;
    height: 78rpx;
    border-left: 1rpx solid #ddd;
    padding-left: 46rpx;
    margin-right: 30rpx;
    color: #999;
    font-size: 25rpx;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;
  }
  .icon-shoucang {
    width: 32rpx;
    height: 32rpx;
    margin-top: 10rpx;
    font-size: 25rpx;
  }
}

.product-foot {
  font-size: 30rpx;
  color: #999;
  margin-top: 34rpx;
}

.part {
  background-color: #fff;
  margin: 20rpx 0;
  font-size: 32rpx;
  color: #999;

  .part-line {
    overflow: hidden;
  }

  &-item {
    display: flex;
    padding: 28rpx 16rpx;
    position: relative;
    align-items: center;
  }

  &-line:after {
    content: '';
    height: 1rpx;
    width: 734rpx;
    background-color: #ddd;
    display: block;
    position: absolute;
    bottom: -1rpx;
  }
  .note {
    color: #333;
    margin-right: 40rpx;
  }
  .description {
    width: 490rpx;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
  }
  .icon-jiantouyou {
    width: 25rpx;
    height: 25rpx;
    color: #ccc;
    position: absolute;
    right: 46rpx;
    display: flex;
    align-items: center;
    justify-content: center;
  }
}

.tabs-head {
  height: 100rpx;
  background-color: #fff;
  display: flex;
}
.tabs-head .tabs-item {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 30rpx;
  position: relative;
}
.tabs-head .active {
  color: #ff2d4a;
  font-weight: 400;
}
.tabs-head .active:after {
  content: '';
  height: 12rpx;
  width: 100%;
  background-color: #ff2d4a;
  position: absolute;
  left: 0;
  bottom: 0;
}
.tabs-body {
  padding: 16rpx;
  padding-bottom: 250rpx;

  .introduce {
    text-align: center;
  }
}
.param-item {
  padding: 30rpx 0;
  font-size: 28rpx;
  display: flex;
  align-items: center;
}
.param-item .note {
  width: 150rpx;
  color: #999;
}
.param-item .description {
  width: 568rpx;
  line-height: 1.3;
}

.fixed-bar {
  width: 750rpx;
  height: 98rpx;
  background-color: #fff;
  position: fixed;
  bottom: 0;
  z-index: 11;
  display: flex;
  align-items: center;
  justify-content: space-between;
}
.fixed-bar .item {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}
.fixed-bar .item .iconfont {
  width: 40rpx;
  height: 40rpx;
  font-size: 40rpx;
  color: #999;
}

.fixed-bar .item .item-note {
  margin-top: 10rpx;
  font-size: 22rpx;
  color: #666;
}
.fixed-bar .btn-group {
  display: flex;
}
.fixed-bar .btn {
  width: 213rpx;
  height: 98rpx;
  line-height: 98rpx;
  text-align: center;
  font-size: 30rpx;
  color: #fff;
}
.yellow-button {
  background-color: #ffb400;
}
.red-button {
  background-color: #ff2d4a;
}

.wxParse-content {
  padding: 55rpx;

  .wxParse-a {
    display: none;
  }
  .wxParse-div {
    display: flex;
    justify-content: center;
  }
}
.contact-btn {
  opacity: 0;
  position: absolute;
  width: 100%;
  height: 100%;
}
.fixed-bar .item {
  position: relative;
}
</style>
